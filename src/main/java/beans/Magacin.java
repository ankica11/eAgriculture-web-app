package beans;
// Generated 17.05.2020. 19.35.51 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import util.HibernateUtil;

/**
 * Magacin generated by hbm2java
 */
public class Magacin  implements java.io.Serializable {


     private Integer idM;
     private Onlineprodavnica onlineprodavnica;
     private Rasadnik rasadnik;
     private int kolicina;
     private Set<Sadnica> sadnicas = new HashSet<Sadnica>(0);

    public Magacin() {
    }

	
    public Magacin(Onlineprodavnica onlineprodavnica, Rasadnik rasadnik, int kolicina) {
        this.onlineprodavnica = onlineprodavnica;
        this.rasadnik = rasadnik;
        this.kolicina = kolicina;
    }
    public Magacin(Onlineprodavnica onlineprodavnica, Rasadnik rasadnik, int kolicina, Set<Sadnica> sadnicas) {
       this.onlineprodavnica = onlineprodavnica;
       this.rasadnik = rasadnik;
       this.kolicina = kolicina;
       this.sadnicas = sadnicas;
    }
   
    public Integer getIdM() {
        return this.idM;
    }
    
    public void setIdM(Integer idM) {
        this.idM = idM;
    }
    public Onlineprodavnica getOnlineprodavnica() {
        return this.onlineprodavnica;
    }
    
    public void setOnlineprodavnica(Onlineprodavnica onlineprodavnica) {
        this.onlineprodavnica = onlineprodavnica;
    }
    public Rasadnik getRasadnik() {
        return this.rasadnik;
    }
    
    public void setRasadnik(Rasadnik rasadnik) {
        this.rasadnik = rasadnik;
    }
    public int getKolicina() {
        return this.kolicina;
    }
    
    public void setKolicina(int kolicina) {
        this.kolicina = kolicina;
    }
    public Set<Sadnica> getSadnicas() {
        return this.sadnicas;
    }
    
    public void setSadnicas(Set<Sadnica> sadnicas) {
        this.sadnicas = sadnicas;
    }

    public static List<Magacin> dohvatiSadniceIzMagacina(int idRasadnik){
        List<Magacin> sadnice=new ArrayList<Magacin>();
        SessionFactory sf = HibernateUtil.getSessionFactory();
         Session session = sf.openSession();
         session.beginTransaction();
         String upit="from Magacin m where m.rasadnik.idRas = :idRasadnik and m.onlineprodavnica.tip = 'sadnica' and m.kolicina > 0";
         Query query = session.createQuery(upit);
         query.setParameter("idRasadnik", idRasadnik);
         
         sadnice=query.list();
         session.getTransaction().commit();
         session.close();
         return sadnice;
    }
    
    public static List<Magacin> dohvatiPreparateIzMagacina(int idRasadnik){
        List<Magacin> preparati = new ArrayList<Magacin>();
         SessionFactory sf = HibernateUtil.getSessionFactory();
         Session session = sf.openSession();
         session.beginTransaction();
         String upit="from Magacin m where m.rasadnik.idRas = :idRasadnik and m.onlineprodavnica.tip = 'preparat' and m.kolicina > 0";
         Query query = session.createQuery(upit);
         query.setParameter("idRasadnik", idRasadnik);
         
         preparati=query.list();
         session.getTransaction().commit();
         session.close();
         return preparati;
    }
    
    public static void magacinUpdate(Magacin magacin){
        magacin.setKolicina(magacin.getKolicina()-1);
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.update(magacin);

        session.getTransaction().commit();
        session.close();
    }
    
    public static boolean provera(String username, int idProizvoda){
        boolean status=true;
        List<Onlineprodavnica> narucivaniProizvodi=new ArrayList<Onlineprodavnica>();
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        String upit="from Magacin m where m.rasadnik.poljoprivrednik.usernamePoljo = :idPoljo and m.onlineprodavnica.idPro = :idProizvod";
         Query query = session.createQuery(upit);
         query.setParameter("idPoljo", username);
         query.setParameter("idProizvod", idProizvoda);
         narucivaniProizvodi=query.list();
        
        session.getTransaction().commit();
        session.close();
        if(narucivaniProizvodi.isEmpty()){
            status=false;
        }
        return status;
        
    }
    
    
    public static void istovariRobu(Rasadnik rasadnik, Onlineprodavnica proizvod, int kolicina){
        Magacin magacin = Magacin.dohvatiMagacin(rasadnik.getIdRas(), proizvod);
        if(magacin==null){
            //dodaj novi proizvod u magacin
            Magacin novi = new Magacin(proizvod, rasadnik, kolicina);
            Magacin.dodajMagacin(novi);
        }else{
            //dopuni kolicinu postojeceg proizvoda
            magacin.setKolicina(magacin.getKolicina()+kolicina);
            Magacin.azurirajMagacin(magacin);
        }
        
    }
    
    public static Magacin dohvatiMagacin(int idRasadnik, Onlineprodavnica proizvod){
        Magacin magacin = new Magacin();
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        String upit="from Magacin m where m.rasadnik.idRas = :rasadnik and m.onlineprodavnica.idPro = :proizvod";
        Query query = session.createQuery(upit);
        query.setParameter("rasadnik", idRasadnik);
        query.setParameter("proizvod", proizvod.getIdPro());
        magacin = (Magacin) query.uniqueResult();
        
        session.getTransaction().commit();
        session.close();
        return magacin;
    }
    
    
    public static void dodajMagacin(Magacin m){
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        session.save(m);
        session.getTransaction().commit();
        session.close();
    }
    
    public static void azurirajMagacin(Magacin m){
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        session.update(m);
        session.getTransaction().commit();
        session.close();
    }
    
    public static List<Magacin> dohvatiMagacinePoljoprivrednika(String poljoprivrednik){
        List<Magacin> magacini=new ArrayList<Magacin>();
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        String upit = "from Magacin m where m.rasadnik.poljoprivrednik.usernamePoljo = :username";
        Query query = session.createQuery(upit);
        query.setParameter("username", poljoprivrednik);
        magacini = query.list();
        
        session.getTransaction().commit();
        session.close();
        return magacini;
        
    }


}


