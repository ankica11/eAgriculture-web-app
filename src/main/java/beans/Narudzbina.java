package beans;
// Generated 17.05.2020. 19.35.51 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import util.HibernateUtil;

/**
 * Narudzbina generated by hbm2java
 */
public class Narudzbina  implements java.io.Serializable {


     private Integer idN;
     private Rasadnik rasadnik;
     private Date datum;
     private Set<Stavka> stavkas = new HashSet<Stavka>(0);

    public Narudzbina() {
    }

	
    public Narudzbina(Rasadnik rasadnik, Date datum) {
        this.rasadnik = rasadnik;
        this.datum = datum;
    }
    public Narudzbina(Rasadnik rasadnik, Date datum, Set<Stavka> stavkas) {
       this.rasadnik = rasadnik;
       this.datum = datum;
       this.stavkas = stavkas;
    }
   
    public Integer getIdN() {
        return this.idN;
    }
    
    public void setIdN(Integer idN) {
        this.idN = idN;
    }
    public Rasadnik getRasadnik() {
        return this.rasadnik;
    }
    
    public void setRasadnik(Rasadnik rasadnik) {
        this.rasadnik = rasadnik;
    }
    public Date getDatum() {
        return this.datum;
    }
    
    public void setDatum(Date datum) {
        this.datum = datum;
    }
    public Set<Stavka> getStavkas() {
        return this.stavkas;
    }
    
    public void setStavkas(Set<Stavka> stavkas) {
        this.stavkas = stavkas;
    }


    public static void sacuvajNarudzbinu(Narudzbina narudzbina){
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        session.save(narudzbina);
        session.getTransaction().commit();
        session.close();
        
    }
    
    public static void obrisiNarudzbinu(Narudzbina narudzbina){
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        session.delete(narudzbina);
        session.getTransaction().commit();
        session.close();
    }
    
    public static List<Narudzbina> dohvatiNarudzbinePreduzeca(String preduzece){
        List<Narudzbina> narudzbine = new ArrayList<Narudzbina>();
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        String upit="select distinct s.narudzbina from Stavka s "
                + "where (s.status = 'neisporuceno' or s.status = 'na cekanju') and s.onlineprodavnica.preduzece.usernamePred = :preduzece";
         Query query = session.createQuery(upit);
         query.setParameter("preduzece", preduzece);
         narudzbine = query.list();
        
        session.getTransaction().commit();
        session.close();
        return narudzbine;
    }
    
    public static boolean proveraIsporukeNarudzbine(int idNar,String preduzece){
        boolean status=false;
        List<Stavka> stavke = new ArrayList<Stavka>();
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        String upit="from Stavka s where s.narudzbina.idN = :narudzbina and s.onlineprodavnica.preduzece.usernamePred = :preduzece and s.status='u toku'";
         Query query = session.createQuery(upit);
         query.setParameter("narudzbina", idNar);
         query.setParameter("preduzece", preduzece);
         stavke = query.list();
        
        session.getTransaction().commit();
        session.close();
        
        status=stavke.isEmpty(); //ako je prazna status ce biti true to znaci da su sve stavke tog preduzeca na narudzbini isporucene
        return status;
        
    }

}


