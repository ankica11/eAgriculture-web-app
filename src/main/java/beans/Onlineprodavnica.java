package beans;
// Generated 17.05.2020. 19.35.51 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import javax.faces.model.SelectItem;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import util.HibernateUtil;

/**
 * Onlineprodavnica generated by hbm2java
 */
public class Onlineprodavnica  implements java.io.Serializable {


     private Integer idPro;
     private Preduzece preduzece;
     private String naziv;
     private String kolicina;
     private String tip;
     private Integer uputstvo;
     private BigDecimal jedinicnaCena;
     private BigDecimal srOcena;
     private int povucen;
     private Set<Stavka> stavkas = new HashSet<Stavka>(0);
     private Set<Magacin> magacins = new HashSet<Magacin>(0);
     private Set<Ocene> ocenes = new HashSet<Ocene>(0);

    public Onlineprodavnica() {
    }

	
    public Onlineprodavnica(Preduzece preduzece, String naziv, String kolicina, String tip, BigDecimal jedinicnaCena, BigDecimal srOcena) {
        this.preduzece = preduzece;
        this.naziv = naziv;
        this.kolicina = kolicina;
        this.tip = tip;
        this.jedinicnaCena = jedinicnaCena;
        this.srOcena = srOcena;
    }

    public Onlineprodavnica(Preduzece preduzece, String naziv, String kolicina, String tip, Integer uputstvo, BigDecimal jedinicnaCena, BigDecimal srOcena) {
        this.preduzece = preduzece;
        this.naziv = naziv;
        this.kolicina = kolicina;
        this.tip = tip;
        this.uputstvo = uputstvo;
        this.jedinicnaCena = jedinicnaCena;
        this.srOcena = srOcena;
       
    }
    
    
    public Onlineprodavnica(Preduzece preduzece, String naziv, String kolicina, String tip, Integer uputstvo, BigDecimal jedinicnaCena, BigDecimal srOcena, Set<Stavka> stavkas, Set<Magacin> magacins, Set<Ocene> ocenes) {
       this.preduzece = preduzece;
       this.naziv = naziv;
       this.kolicina = kolicina;
       this.tip = tip;
       this.uputstvo = uputstvo;
       this.jedinicnaCena = jedinicnaCena;
       this.srOcena = srOcena;
       this.stavkas = stavkas;
       this.magacins = magacins;
       this.ocenes = ocenes;
    }
   
    public Integer getIdPro() {
        return this.idPro;
    }
    
    public void setIdPro(Integer idPro) {
        this.idPro = idPro;
    }
    public Preduzece getPreduzece() {
        return this.preduzece;
    }
    
    public void setPreduzece(Preduzece preduzece) {
        this.preduzece = preduzece;
    }
    public String getNaziv() {
        return this.naziv;
    }
    
    public void setNaziv(String naziv) {
        this.naziv = naziv;
    }
    public String getKolicina() {
        return this.kolicina;
    }
    
    public void setKolicina(String kolicina) {
        this.kolicina = kolicina;
    }
    public String getTip() {
        return this.tip;
    }
    
    public void setTip(String tip) {
        this.tip = tip;
    }
    public Integer getUputstvo() {
        return this.uputstvo;
    }
    
    public void setUputstvo(Integer uputstvo) {
        this.uputstvo = uputstvo;
    }
    public BigDecimal getJedinicnaCena() {
        return this.jedinicnaCena;
    }
    
    public void setJedinicnaCena(BigDecimal jedinicnaCena) {
        this.jedinicnaCena = jedinicnaCena;
    }
    public BigDecimal getSrOcena() {
        return this.srOcena;
    }
    
    public void setSrOcena(BigDecimal srOcena) {
        this.srOcena = srOcena;
    }

   

    public int getPovucen() {
        return povucen;
    }

    public void setPovucen(int povucen) {
        this.povucen = povucen;
    }

    
   
    
    
    public Set<Stavka> getStavkas() {
        return this.stavkas;
    }
    
    public void setStavkas(Set<Stavka> stavkas) {
        this.stavkas = stavkas;
    }
    public Set<Magacin> getMagacins() {
        return this.magacins;
    }
    
    public void setMagacins(Set<Magacin> magacins) {
        this.magacins = magacins;
    }
    public Set<Ocene> getOcenes() {
        return this.ocenes;
    }
    
    public void setOcenes(Set<Ocene> ocenes) {
        this.ocenes = ocenes;
    }

    public static List<Onlineprodavnica> dohvatiProizvode(){
        List<Onlineprodavnica> proizvodi=new ArrayList<Onlineprodavnica>();
         SessionFactory sf = HibernateUtil.getSessionFactory();
         Session session = sf.openSession();
         session.beginTransaction();
         String upit="from Onlineprodavnica o where o.povucen=0 and o.preduzece.korisnik.status != 2";
         Query query = session.createQuery(upit);
         proizvodi = query.list();
         session.getTransaction().commit();
         session.close();
         return proizvodi;
    }
    
    public static void azurirajProdavnicu(Onlineprodavnica proizvod,String kolicina){
        proizvod.setKolicina(String.valueOf(Integer.valueOf(proizvod.kolicina)-Integer.valueOf(kolicina)));
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        session.update(proizvod);
        session.getTransaction().commit();
        session.close();
    }
    
     public static void azurirajProizvod(Onlineprodavnica proizvod){
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        session.update(proizvod);
        
        session.getTransaction().commit();
        session.close();
    }
     
     public static List<Onlineprodavnica> dohvatiProizvodePreduzeca(String idPreduzeca){
         List<Onlineprodavnica> proizvodi = new ArrayList<Onlineprodavnica>();
         SessionFactory sf = HibernateUtil.getSessionFactory();
         Session session = sf.openSession();
         session.beginTransaction();
         String upit="from Onlineprodavnica o where o.preduzece.usernamePred = :username";
         Query query = session.createQuery(upit);
         query.setParameter("username", idPreduzeca);
         proizvodi = query.list();
         session.getTransaction().commit();
         session.close();
         return proizvodi;
     }
     
     
     public static void dodajProizvod(Onlineprodavnica proizvod){
        SessionFactory sf=HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        
        session.save(proizvod);
        
        session.getTransaction().commit();
        session.close();
         
     }
     public static LinkedList<SelectItem> proizvodiItems(String preduzece){
         LinkedList<SelectItem> proizvodiIt = new LinkedList<SelectItem>();
         List<Onlineprodavnica> proizvodi = Onlineprodavnica.dohvatiProizvodePreduzeca(preduzece);
         for(int i=0; i<proizvodi.size(); i++){
             proizvodiIt.add(new SelectItem(proizvodi.get(i).idPro, proizvodi.get(i).naziv));
         }
         
         return proizvodiIt;
         
     }
     
     public static Onlineprodavnica dohvatiProizvodPoId(int id){
         Onlineprodavnica proizvod=new Onlineprodavnica();
         SessionFactory sf=HibernateUtil.getSessionFactory();
         Session session = sf.openSession();
         session.beginTransaction();
        
         String upit="from Onlineprodavnica o where o.idPro = :id";
         Query query = session.createQuery(upit);
         query.setParameter("id", id);
         proizvod=(Onlineprodavnica) query.uniqueResult();
        
         session.getTransaction().commit();
         session.close();
         
         return proizvod;
         
     }
     
    


}


